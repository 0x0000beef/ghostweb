/* Стили для отдельных компонентов: кнопки, меню, карточки и т.д. */

/* Пример стилизации системного меню, если не используется Bootstrap Navbar */
/*
.region-navigation-sticky-top ul.menu {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
}

.region-navigation-sticky-top ul.menu li {
  margin-right: 1rem;
}

.region-navigation-sticky-top ul.menu li a {
  text-decoration: none;
  padding: 0.5rem 1rem;
  display: block;
}
*/

/* Стили для карточек (если используются стандартные Drupal блоки или Views) */
.card-custom { /* Пример кастомной карточки */
  border: 1px solid #dee2e6;
  border-radius: 0.25rem;
  margin-bottom: 1.5rem;
  background-color: #fff;
}
.card-custom__header {
  padding: 0.75rem 1.25rem;
  background-color: rgba(0,0,0,.03);
  border-bottom: 1px solid rgba(0,0,0,.125);
}
.card-custom__body {
  padding: 1.25rem;
}
.card-custom__title {
  margin-top: 0;
  margin-bottom: 0.5rem;
  font-size: 1.25rem;
}





/*
 * Стили для меню в блоках с классом .custom-region-block-menu
 * Превращает вертикальный список в адаптивную многоколоночную сетку.
 */

.custom-region-block-menu ul {
  /* 1. Убираем маркеры и стандартные отступы списка */
  list-style: none;
  padding: 0;
  margin: 0;

  /* 2. Превращаем меню в многоколоночную сетку */
  display: grid;
  /* Эта магия делает сетку адаптивной:
     - auto-fill: автоматически создает столько колонок, сколько поместится.
     - minmax(200px, 1fr): каждая колонка будет минимум 200px в ширину.
       Если останется свободное место, все колонки равномерно его поделят.
     Меняйте 200px, чтобы управлять шириной и количеством колонок.
  */
  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
  
  /* Задаем расстояние между элементами сетки */
  gap: 1em; /* Расстояние и по горизонтали, и по вертикали */
}

/*
 * Стили для меню в блоках с классом .custom-region-block-menu
 * Превращает вертикальный список в адаптивную многоколоночную сетку
 * и стилизует вложенные меню (второй уровень).
 */

/*
 * Стили для меню в блоках с классом .custom-region-block-menu
 * Превращает список в адаптивную многоколоночную сетку простых ссылок
 * и стилизует вложенные меню (второй уровень).
 */
/*
 * Стили для меню в блоках с классом .custom-region-block-menu
 * Превращает список в адаптивную многоколоночную сетку простых ссылок
 * с SVG-иконками и стилизацией вложенных меню.
 */

/* --- СТИЛИ ДЛЯ ПЕРВОГО УРОВНЯ МЕНЮ --- */

.custom-region-block-menu > ul {
  list-style: none;
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  row-gap: 0.5em;
  column-gap: 2em;
}

/* Стилизуем непосредственно ссылки в меню первого уровня */
.custom-region-block-menu > ul > li > a {
  font-weight: bold;
  font-size: smaller;
  text-decoration: none;
  color: #34495e;
  padding: 0.5em 0;
  transition: color 0.2s;
  
  /* НОВОЕ: Используем Flexbox для идеального выравнивания иконки и текста */
  display: flex;
  align-items: flex-start;
}

/* НОВОЕ: Добавляем SVG-иконку перед пунктами ПЕРВОГО уровня */
.custom-region-block-menu > ul > li > a::before {
  /* Вставляем SVG как Data URI. 'currentColor' позволяет иконке наследовать цвет текста */
  content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor'%3e%3cpath fill-rule='evenodd' d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");
  
  /* Задаем размеры и отступ для иконки */
  width: 1em;
  height: 1em;
  margin-right: 0.5em;
  
  /* Предотвращаем сжатие иконки, если текст очень длинный */
  flex-shrink: 0;
}


/* Эффект при наведении курсора на пункт первого уровня */
.custom-region-block-menu > ul > li > a:hover {
  color: #007bff;
  text-decoration: underline;
}


/* --- СТИЛИ ДЛЯ ВТОРОГО УРОВНЯ МЕНЮ --- */

.custom-region-block-menu ul ul {
  list-style: none;
  padding: 0;
  margin: 0.75em 0 0 1.2em;
}

.custom-region-block-menu ul ul li a {
  display: flex; /* Также используем flex для выравнивания */
  align-items: flex-start;
  text-decoration: none;
  color: #2c3e50;
  font-weight: normal;
  padding: 0.4em 0;
  transition: color 0.2s;
}

.custom-region-block-menu ul ul li a:hover {
    color: #007bff;
    text-decoration: underline;
}

/* Символ иерархии для ВТОРОГО уровня остается без изменений */
.custom-region-block-menu ul ul li a::before {
  content: '└─'; /* Убрал пробел из контента, чтобы лучше управлять им через margin */
  color: #7f8c8d;
  font-weight: normal;
  margin-right: 0.5em;
  flex-shrink: 0;
}









/* теги */

/*
 * ===================================================================
 * Финальные стили для поля тегов (минималистичный вариант)
 * - Без иконок
 * - Плавная смена цвета при наведении, без анимации движения
 * ===================================================================
 */

/* 1. Главный контейнер .tags-section */
.tags-section {
  display: flex;
  flex-wrap: wrap;
  align-items: baseline;
  gap: 0.75em;
}

/* 2. Надпись "Теги:" */
.tags-section .field__label {
  font-weight: bold;
  flex-shrink: 0;
}

/* 3. Контейнер для всех ссылок-тегов */
.tags-section .field__items {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75em;
}

/* 4. Стилизация самой ссылки-тега */
.tags-section .field__item a {
  /* ИЗМЕНЕНО: flex больше не нужен, так как нет иконки для выравнивания */
  display: inline-block; 
  font-size: 0.9em;
  text-decoration: none;
  color: #495057;
  background-color: #e9ecef;
  padding: 0.3em 0.8em;
  border-radius: 999px;
  border: 1px solid #dee2e6;
  /* Эта строка отвечает за плавность смены цвета */
  transition: all 0.2s ease-in-out; 
}

/*
 * 5. БЛОК С ИКОНКОЙ УДАЛЕН
 * Правило .tags-section .field__item a::before было полностью удалено.
 */

/* * 6. Эффект при наведении курсора на тег
 * Оставили только смену цвета.
 */
.tags-section .field__item a:hover {
  color: #fff;
  background-color: #007bff; /* Пример синего цвета, можете поменять */
  border-color: #007bff;
  /* Свойство transform и box-shadow удалены, чтобы убрать анимацию "приподнимания" */
}

/*
 * Добавляем вертикальный отступ снизу для блока тегов,
 * но только в режиме отображения "Анонс" (teaser).
 */
.tags-section {
  margin-bottom: 1.5rem; /* Стандартный отступ, равный примерно 24px */
}





/*
 * Стили для административного меню в Editor Region
 */

/* 1. Общая настройка контейнера меню (ul) */
.region-editor-region .menu {
  display: flex;         /* Включаем Flexbox для горизонтального выравнивания */
  flex-wrap: wrap;       /* Разрешаем перенос элементов на новую строку */
  list-style: none;      /* Убираем маркеры списка */
  margin: 0;
  padding: 0;
  background-color: #f1f3f5; /* Легкий фон для всей области меню */
  border-radius: 4px;
  padding: 0.5rem;
}

/* 2. Стиль для каждого пункта меню верхнего уровня (li) - наши "карточки" */
.region-editor-region .menu > li {
  margin: 0.25rem;
  position: relative; /* Необходимо для позиционирования выпадающего подменю */
}

/* 3. Стиль для ссылок внутри карточек */
.region-editor-region .menu > li > a {
  display: block;
  padding: 0.5rem 1rem;
  font-size: 0.875rem; /* Уменьшаем шрифт, как вы и хотели */
  font-weight: 500;
  color: #212529;
  text-decoration: none;
  background-color: #fff;
  border: 1px solid #dee2e6;
  border-radius: 4px;
  white-space: nowrap; /* Запрещаем перенос текста в ссылке */
  transition: all 0.2s ease-in-out;
}

/* Состояние при наведении */
.region-editor-region .menu > li > a:hover {
  background-color: #e9ecef;
  border-color: #ced4da;
  color: #000;
}

/* 4. Стилизация выпадающего подменю (второй уровень) */
.region-editor-region nav > ul ul {
  /* ВОЗВРАЩАЕМ ЭТУ СТРОКУ, ЧТОБЫ МЕНЮ БЫЛО СКРЫТО ПО УМОЛЧАНИЮ */
  display: none;
  
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;

  /* УДАЛЯЕМ ОТСЮДА display: grid;, ОН НУЖЕН ТОЛЬКО ПРИ НАВЕДЕНИИ */
  grid-template-columns: repeat(2, 1fr);
  gap: 0.5rem;
  
  min-width: 450px;
  max-width: 90vw;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 4px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  padding: 0.75rem;
  
}

/* Медиа-запрос для планшетов и небольших десктопов */
@media (min-width: 768px) {
  .region-editor-region nav > ul ul {
    grid-template-columns: repeat(3, 1fr); /* 3 колонки */
    min-width: 600px;
  }
}

/* Медиа-запрос для широких экранов */
@media (min-width: 1200px) {
  .region-editor-region nav > ul ul {
    grid-template-columns: repeat(4, 1fr); /* 4 колонки */
    min-width: 800px;
  }
}

/* Показываем подменю при наведении на родительский li */
.region-editor-region nav > ul > li:hover > ul {
  /* Меняем display: block на display: grid, чтобы активировать сетку */
  display: grid;
}

/* Убираем маркеры у вложенных li, если они есть */
.region-editor-region nav > ul ul li {
  list-style: none;
}

/* Ссылки второго уровня */
.region-editor-region nav > ul ul li a {
  display: block;
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
  color: #212529;
  text-decoration: none;
  background-color: #f8f9fa; /* Небольшой фон для каждого пункта */
  border: 1px solid #dee2e6;
  border-radius: 4px;
  height: 100%; /* Растягиваем ссылку на всю высоту ячейки */
  
  /* РАЗРЕШАЕМ ПЕРЕНОС СЛОВ */
  white-space: normal;
}

.region-editor-region nav > ul ul li a:hover {
  background-color: #e9ecef;
  border-color: #ced4da;
}

/* Показываем подменю при наведении на родительский li */
.region-editor-region nav > ul > li:hover > ul {
  /* Вот здесь display: grid; должен быть, чтобы меню появилось как сетка */
  display: grid; 
}





/*
 * Стили для сетки новостей на странице /news
 */

/* 1. Контейнер для всей сетки */
.news-grid-view .view-content {
  display: grid;
  /* Адаптивные колонки: браузер сам решит, сколько их сделать,
     но каждая будет не меньше 300px */
  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
  gap: 1.5rem; /* Расстояние между карточками */
}

/* 2. Стили для одной карточки */
.news-card {
  display: flex;
  flex-direction: column;
  border: 1px solid #e9ecef;
  border-radius: 8px;
  overflow: hidden; /* Скрываем всё, что выходит за скруглённые углы */
  /* transition: box-shadow 0.2s ease-in-out; */
  background-color: #fff;
}

.news-card:hover {
  /* box-shadow: 0 8px 24px rgba(0,0,0,0.1); */
}

/* 3. Изображение в карточке */
.news-card__image img {
  width: 100%;
  height: 300px;
  object-fit: cover; /* Масштабирует изображение, чтобы оно заполнило блок */
  display: block;
}

/* 4. Контентная часть карточки */
.news-card__content {
  padding: 1rem;
  flex-grow: 1; /* Это свойство уже должно быть, оно заставляет этот блок расти */
  display: flex;
  flex-direction: column; /* Делает этот блок flex-контейнером */
}

/* 5. Дата публикации */
.news-card__date {
  font-size: 0.8rem;
  color: #6c757d;
  margin-bottom: 0.5rem;
}

/* 6. Заголовок новости - СЮДА ДОБАВЛЯЕМ ИЗМЕНЕНИЕ */
.news-card__title {
  font-size: 1.25rem;
  margin: 0;
  flex-grow: 1; /* <-- ДОБАВЬТЕ ЭТУ СТРОКУ */
}
.news-card__title a {
  text-decoration: none;
  color: #212529;
}
.news-card__title a:hover {
  /* text-decoration: underline; */
}

/* 7. Теги (новое правило, если его не было) */
.news-card__tags {
  margin-top: 1rem; /* Добавим небольшой отступ сверху для тегов */
}




/*
 * Кастомная стилизация пагинации в стиле "отдельных кнопок"
 */

/* Добавляем верхний отступ для всей пагинации */
.pager-nav {
  margin-top: 3rem; /* Можете изменить значение по своему вкусу, например, 2rem или 40px */
}

/* 1. Общие стили для контейнера ul.pagination */
.pagination {
  gap: 0.5rem; /* Добавляем расстояние между кнопками */
}

/* 2. Стили для элемента li.page-item */
.pagination .page-item {
  /* Задаём фиксированный размер для каждой кнопки */
  width: 42px;
  height: 42px;
}

/* 3. Переопределяем стили для самой ссылки a.page-link */
.pagination .page-item .page-link {
  /* Убираем стандартные стили Bootstrap */
  margin-left: 0; 
  padding: 0;
  box-shadow: none;

  /* Делаем ссылку гибким контейнером, чтобы идеально центрировать контент */
  display: flex;
  align-items: center;
  justify-content: center;

  /* Задаём размер и скругление */
  width: 100%;
  height: 100%;
  border-radius: 8px;

  /* Цвета и рамка в обычном состоянии */
  background-color: #f4f5f6;
  border: 2px solid #f4f5f6;
  color: #333;
  font-weight: 500;

  /* Плавный переход для эффектов */
  transition: all 0.2s ease-in-out;
}

/* 4. Эффект при наведении */
.pagination .page-item:not(.active) .page-link:hover {
  border-color: #0061d9;
  background-color: #fff;
  color: #0061d9;
}

/* 5. Стиль для активного элемента */
.pagination .page-item.active .page-link {
  background-color: #0061d9;
  border-color: #0061d9;
  color: #fff;
  pointer-events: none; /* Делаем активную страницу некликабельной */
}