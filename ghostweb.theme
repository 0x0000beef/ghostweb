<?php

/**
 * @file
 * Functions to support the Ghostweb theme.
 */



/**
 * Implements hook_theme_suggestions_block_alter().
 */
function ghostweb_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // --- Логика для сворачиваемых меню (проверяем ID МЕНЮ) ---
  if (isset($variables['elements']['#derivative_plugin_id'])) {
    $derivative_id = $variables['elements']['#derivative_plugin_id'];
    
    if (strpos($derivative_id, 'banner-menu-') === 0) {
      $suggestions[] = 'block__collapsible_menu';
    }
  }

  // --- ЛОГИКА для плиточных меню (проверяем ID БЛОКА) ---
  if (isset($variables['elements']['#id'])) {
    $block_id = $variables['elements']['#id'];

    if (strpos($block_id, 'tile_menu_') === 0) {
      $suggestions[] = 'block__tile_menu';
    }
  }
}


/**
 * Implements hook_preprocess_HOOK() for file_link.html.twig.
 *
 * Эта функция выполняется перед тем, как шаблон file-link.html.twig будет отображен.
 * Мы используем её, чтобы перехватить и изменить текст ссылки на файл.
 */
function ghostweb_preprocess_file_link(array &$variables) {
  // Текст ссылки находится в ключе '#title' внутри рендер-массива 'link'.
  if (isset($variables['link']['#title'])) {
    $link_text = $variables['link']['#title'];
    
    // Установите желаемый лимит длины имени файла.
    $limit = 60;

    // Используем mb_strlen для корректной работы с кириллицей и другими кодировками.
    if (mb_strlen($link_text) > $limit) {
      // Если имя файла длиннее лимита, обрезаем его.
      // Эта логика сохраняет начало и конец имени (включая расширение).
      // Например: "очень_длинное_имя...файла.jpg"
      $start_length = 30;
      $end_length = 27;
      $truncated_text = mb_substr($link_text, 0, $start_length) . '...' . mb_substr($link_text, -$end_length);
      
      // Перезаписываем оригинальный текст ссылки нашим обрезанным вариантом.
      $variables['link']['#title'] = $truncated_text;
    }
  }
}